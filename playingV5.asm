; ----------------------------------------------------
; ELTON SOARES SILVA
; 41711ETE010
; 16/06/2021
; CLOCK: 12 MHz | CICLO DE MÁQ.: 1 uS
; VERSÃO DO CÓDIGO 5

; USO DOS REGISTRADORES:

; R0 E R1: 	GUARDAM PRÓXIMOS VALORES DO TMR0 RELATIVOS À FREQUÊNCIA A SER TOCADA
; R2: 		GUARDA QUANTAS VEZES DETERMINADA NOTA DEVERÁ SER TOCADA
; R3: 		REG. PARA AUXILIAR A RESETAR A MÚSICA QUANDO TODAS AS NOTAS TIVEREM SIDO TOCADAS
; R4 E R5: 	ARMAZENAM O DPTR COM ENDEREÇO DA FREQUÊNCIA TOCADA, DPL E DPH RESPECTIVAMENTE
; R6 E R7: 	ARMAZENAM O DPTR COM ENDEREÇO DA DURAÇÃO DA ATUAL NOTA
; R9: 		GUARDA QUANTAS VEZES O TMR1 ESTOUROU P/ AUXILIAR A TROCAR A NOTA

; ----------------------------------------------------

R9 EQU 31H

ORG 0000H
JMP CONFIG

; ---------------------------------------------- ROTINA QUE GERA O SINAL ELÉTRICO VARIÁVEL

ORG 000BH				; ROTINA INTERRUPT TIMER0
CJNE R1, #00H, COMPLEMENTA_P10		; SE R1 != 00H, COMPLEMENTAR P1.0. CASO CONTRÁRIO, FAZ NADA
RETI

COMPLEMENTA_P10:
	CPL P1.0			; COMPLEMENTA P1.0
 	MOV TH0, R1			; CARREGA TIMER COM VALORES PARA TOCAR A FREQ. DESEJADA
	MOV TL0, R0			; ''
	RETI

; ---------------------------------------------- ROTINA QUE TEMPORIZA AS NOTAS

ORG 001BH		; ROTINA INTERRUPT TIMER1

DEC R2			; DECREMENTA R2
MOV A, R2		; A = R2
JZ PULAPROXNOTA		; A = R2 = 0? SE SIM, ACIONA ROTINA PARA TROCAR A NOTA
CLR A			; SE NÃO, LIMPA A E CONTINUA
RETI

PULAPROXNOTA:		; ROTINA QUE TROCA DE NOTA

	; RECARREGA R2 COM A DURAÇÃO DA PRÓXIMA NOTA
	CLR A		; LIMPA A
	MOV DPH, R7	; DPH = R7
	MOV DPL, R6	; DPL = R6
	INC DPTR	; INCREMENTA DPTR PARA IR PARA A PRÓXIMA DURAÇÃO DA PRÓXIMA NOTA
	MOVC A, @A+DPTR	; A = @DPTR OU PRÓXIMA DURAÇÃO
	MOV R2, A	; R2 = A
	CLR A		; LIMPA A
	MOV R7, DPH	; R7R6 = DPTR, OU SEJA, ATUALIZA R7 E R6 COM NOVO ENDEREÇO
	MOV R6, DPL	; ''

	; RECARREGA R1 E R0 COM OS VALORES PARA MUDAR PARA A PRÓXIMA FREQUÊNCIA
	MOV DPH, R5	; DPTR = R5R4
	MOV DPL, R4	; ''
	INC DPTR	; INCREMENTA DPTR
	MOVC A, @A+DPTR ; A = @DPTR OU BYTE MAIS SIGNIFICATIVO DA PRÓXIMA FREQ.
	MOV R1, A	; R1 = A
	CLR A 		; LIMPA A
	INC DPTR	; INCRREMENTA DPTR
	MOVC A, @A+DPTR ; A = @DPTR OU BYTE MENOS SIG. DA PRÓXIMA FREQ.
	MOV R0, A	; R0 = A
	CLR A		; LIMPA A
	MOV R5, DPH	; R5R4 = DPTR OU ATUALIZA R5 E R4 COM OS NOVOS ENDEREÇOS DA NOVA FREQ.
	MOV R4, DPL	; ''

	INC R3		; INCREMENTA R3 PARA INDICA QUE PULOU UMA NOTA
	
	RETI

; LOOK-UP TABLE COM VALORES DE CADA NOTA PARA SEREM CARREGADOS NO TMR0 PARA GERAR A FREQUÊNCIA DESEJADA
; CADA NOTA É FORMADA POR UM PAR DE BYTES VISTO QUE O TMR1 TEM 16 BITS
; NOTAS:

; NOTAS UNDERWORLD
C41 EQU 0F8H
C42 EQU 8CH
C51 EQU 0FCH
C52 EQU 44H
A31 EQU 0F7H
A32 EQU 20H
A41 EQU 0FBH
A42 EQU 90H
AS31 EQU 0F7H
AS32 EQU 9FH
AS41 EQU 0FBH
AS42 EQU 0D0H
F31 EQU 0F4H
F32 EQU 0D7H
F41 EQU 0FAH
F42 EQU 68H
D31 EQU 0F2H
D32 EQU 0B7H
D41 EQU 0F9H
D42 EQU 05CH
DS31 EQU 0F3H
DS32 EQU 7BH
DS41 EQU 0F9H
DS42 EQU 0B9H
CS41 EQU 0F8H
CS42 EQU 0F3H
GS31 EQU 0F6H
GS32 EQU 9DH
G31 EQU 0F6H
G32 EQU 09H
FS41 EQU 0FAH
FS42 EQU 0B9H
E31 EQU 0F4H 
E32 EQU 2AH
GS41 EQU 0FBH
GS42 EQU 4CH
B31 EQU 0F8H
B32 EQU 18H

; NOTAS TEMA PRINCIPAL
ORG 150H
DB 0FFH, 04EH, 0FFH, 04EH, 00H, 00H, 0FFH, 04EH, 00H, 00H, 0FFH, 018H, 0FFH, 04EH, 00H, 00H, 0FFH, 067H, 00H, 00H, 00H, 00H, 00H, 00H, 0FEH, 0C2H, 00H, 00H, 00H, 00H, 00H, 00H, 0FFH, 018H, 00H, 00H, 00H, 00H, 0FEH, 0C2H, 00H, 00H, 00H, 00H, 0FEH, 086H, 00H, 00H, 00H, 00H, 0FEH, 0E8H, 00H, 00H, 0FFH, 07H, 00H, 00H, 0FEH, 0FAH, 0FEH, 0E8H, 00H, 00H, 0FEH, 0C2H, 0FFH, 04EH, 0FFH, 067H, 0FFH, 7AH, 00H, 00H, 0FFH, 55H, 0FFH, 67H, 00H, 00H, 0FFH, 4EH, 00H, 00H, 0FFH, 18H, 0FFH, 33H, 0FFH, 07H, 00H, 00H, 00H, 00H, 0FFH, 18H, 00H, 00H, 00H, 00H, 0FEH, 0C2H, 00H, 00H, 00H, 00H, 0FEH, 86H, 00H, 00H, 00H, 00H, 0FEH, 0E8H, 00H, 00H, 0FFH, 07H, 00H, 00H, 0FEH, 0FAH, 0FEH, 0E8H, 00H, 00H, 0FEH, 0C2H, 0FFH, 4EH, 0FFH, 67H, 0FFH, 7AH, 00H, 00H, 0FFH, 55H, 0FFH, 67H, 00H, 00H, 0FFH, 4EH, 00H, 00H, 0FFH, 18H, 0FFH, 33H, 0FFH, 07H, 00H, 00H, 00H, 00H

; UNDERWORLD
DB C41, C42, C51, C52, A31, A32, A41, A42
DB AS31, AS32, AS41, AS42, 00H, 00H
DB 00H, 00H
DB C41, C42, C51, C52, A31, A32, A41, A42
DB AS31, AS32, AS41, AS42, 00H, 00H
DB 00H, 00H
DB F31, F32, F41, F42, D31, D32, D41, D42
DB DS31, DS32, DS41, DS42, 00H, 00H
DB 00H, 00H
DB F31, F32, F41, F42, D31, D32, D41, D42
DB DS31, DS32, DS41, DS42, 00H, 00H
DB 00H, 00H, DS41, DS42, CS41, CS42, D41, D42
DB CS41, CS42, DS41, DS42
DB DS41, DS42, GS31, GS32
DB G31, G32, CS41, CS42
DB C41, C42, FS41, FS42, F41, F42, E31, E32, AS41, AS42
DB A41, A42
DB GS41, GS42, DS41, DS42, B31, B32
DB AS31, AS32, A31, A32, GS31, GS32
DB 00H, 00H, 00H, 00H, 00H, 00H


; LOOK-UP TABLE COM VALORES PARA INDICAR A DURAÇÃO DE CADA NOTA. CADA NÚMERO INDICA QUANTAS VEZES O TMR1 MODO 1, 16 BITS DEVERÁ ESTOURAR ANTES DE TROCAR DE NOTA. PORTANTO, POR EXEMPLO, 2 INDICA QUE O TMR1 ESTOURARÁ 2x E TROCARÁ DE NOTA, TOTALIZANDO UMA DURAÇÃO DE 0,0655 * 2 s PARA AQUELA NOTA.
ORG 400H
; BLOCO 1
DB 2, 2, 3, 2, 3, 2, 2, 3, 2, 3, 3, 3, 2, 3, 3, 3
; BLOCO 2
DB 2, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 2, 3, 2, 2, 3
; BLOCO 3
DB 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
; BLOCO 4
DB 2, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 2, 3, 2, 2, 3
; BLOCO 5
DB 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
; UNDERWORLD
DB 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 4, 4, 4, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2 

; ---------------------------------------------- CONFIGURAÇÕES

ORG 0750H
CONFIG:
	SETB EA				; HABILITA INTERRUPTS
	
	; CONFIGURA TIMER0 E 1 MODO 16 BITS
	SETB ET0			; HABILITA INTERRUPT TIMER 0
	MOV TMOD, #11H			; MODO 1 PARA TMR0 E TMR1

	; PASSA A PRIMEIRA NOTA PARA R0 E R1, E ATUALIZA TH0 E TL0 PARA COMEÇAR A TOCAR A MÚSICA
	MOV DPL, #50H			; POSIÇÃO INICIAL DAS NOTAS
	MOV DPH, #01H
	MOVC A, @A+DPTR			; A = BYTE MAIS SIGNIFICATIVO DA PRIMEIRA NOTA
	MOV R1, A			; R1 = A
	CLR A				; A = 0
	INC DPTR			; PASSA PARA O BYTE MENOS SIG. DA PRIMEIRA NOTA
	MOVC A, @A+DPTR			; A = BYTE MENOS SIGNIFICATIVO DA PRIMEIRA NOTA
	MOV R0, A			; R0 = A
	CLR A				; A = 0
	MOV TH0, R1			; CARREGA TMR0 COM A PRIMEIRA NOTA
	MOV TL0, R0			; ''
	SETB TR0			; INICIA TIMER0

	; CONFIGURA TMR1 E PASSA A PRIMEIRA DURAÇÃO DE NOTA PARA ELE
	SETB ET1			; HABILITA TIMER1
	MOV R4, DPL			; GUARDA ATUAL POSIÇÃO DE FREQ. LSB
	MOV R5, DPH			; GUARDA ATUAL POSIÇÃO DE FREQ. MSB
	MOV DPH, #04H			; DPH = 02H
	MOV DPL, #00H			; DPL = 00H, DPTR = 200H

	MOVC A, @A+DPTR			; A = BYTE MAIS SIG. DA 1ª DURAÇÃO
	MOV R2, A			; R9 = BYTE MAIS SIG. DA 1ª DURAÇÃO
	CLR A				; LIMPA A
	MOV R6, DPL			; R7R6 = DPTR OU IGUAL À POSIÇÃO DA DURAÇÃO
	MOV R7, DPH			; ''
	SETB TR1			; INICIA TIMER1

LOOP:
	CJNE R3, #85H, LOOP		; CHECA SE A MÚSICA JÁ FOI TOTALMENTE TOCADA

	CLR A				; SE FOI, LIMPA A
	MOV R3, #00H			; LIMPA R3

	; REINICIA R2 COM A DURAÇÃO DA PRIMEIRA NOTA
	MOV DPH, #04H			; DPTR = 400H
	MOV DPL, #00H			; ''
	MOVC A, @A+DPTR			; A = @DPTR
	MOV R2, A			; R2 = A
	CLR A				; LIMPA A

	MOV R5, #01H			; REINICIA POSIÇÃO DAS NOTAS
	MOV R4, #4FH			; ''

	MOV R7, #03H			; REINICIA POSIÇÃO DAS DURAÇÕES
	MOV R6, #0FFH			; ''

	JMP LOOP
END